import{S as g,i as p}from"./assets/vendor-46aac873.js";(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))s(e);new MutationObserver(e=>{for(const t of e)if(t.type==="childList")for(const c of t.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&s(c)}).observe(document,{childList:!0,subtree:!0});function a(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerpolicy&&(t.referrerPolicy=e.referrerpolicy),e.crossorigin==="use-credentials"?t.credentials="include":e.crossorigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function s(e){if(e.ep)return;e.ep=!0;const t=a(e);fetch(e.href,t)}})();const r={form:document.querySelector(".form"),input:document.querySelector(".input"),gallery:document.querySelector(".gallery"),button:document.querySelector(".button"),loader:document.querySelector(".loader")},b="https://pixabay.com/api/",L="41991385-9b19b8bb3d6f1491499417d17";function d({query:n,page:o=1,per_page:a}){const s=`${b}?key=${L}&q=${n}&image_type=photo&orientation=horizontal&safesearch=true`;return axios.get(s,{params:{page:o,per_page:a}}).then(({data:e})=>e)}function f(n){return n.map(({webformatURL:o,largeImageURL:a,tags:s,likes:e,views:t,comments:c,downloads:l})=>`
        <li class="gallery-item">
          <a class="gallery-link" href="${a}">
            <img
              class="gallery-image"
              src="${o}"
              alt="${s}"
            />
            <ul class="gallery-info">
              <li class="gallery-info-item">Likes: <span class="descr-span">${e}</span></li>
              <li class="gallery-info-item">Views: <span class="descr-span">${t}</span></li>
              <li class="gallery-info-item">Comments: <span class="descr-span">${c}</span></li>
              <li class="gallery-info-item">Downloads: <span class="descr-span">${l}</span></li>
            </ul> 
          </a>
        </li>`).join("")}function h(){window.scrollBy({top:2*document.querySelector(".gallery-item").getBoundingClientRect().height,behavior:"smooth"})}const m=new g(".gallery-item a",{captionsData:"alt",captionDelay:250}),i={query:"",page:1,maxPage:0,per_page:15};r.form.addEventListener("submit",v);async function v(n){n.preventDefault(),r.gallery.innerHTML="",i.page=1;const o=n.currentTarget;if(i.query=o.elements.query.value.trim(),e(),!i.query){a("The search field can't be empty! Please, enter your request!");return}function a(l){p.show({class:"error-svg",position:"topRight",icon:"error-svg",message:l,maxWidth:"432",messageColor:"#fff",messageSize:"16px",backgroundColor:"#EF4040",close:!1,closeOnClick:!0})}try{const{hits:l,totalHits:u}=await d(i);i.maxPage=Math.ceil(u/i.per_page),r.gallery.insertAdjacentHTML("beforeend",f(l)),m.refresh(),s(),l.length===0?(a("Sorry, there are no images matching your search query. Please, try again!"),s()):l.length>0&&l.length!==u?(c(),r.button.addEventListener("click",y),s()):(t(),a("We are sorry, but you've reached the end of search results"))}catch{a("Sorry, there is a problem with connection with the server")}finally{s(),o.reset(),h()}function s(){setTimeout(()=>{r.loader.classList.add("is-hidden")},500)}function e(){r.loader.classList.remove("is-hidden")}function t(){r.button.classList.add("is-hidden")}function c(){r.button.classList.remove("is-hidden")}}async function y(){i.page+=1,o(),r.button.disabled=!0;try{const{hits:s}=await d(i);r.gallery.insertAdjacentHTML("beforeend",f(s)),m.refresh()}catch{createMessage("Sorry, there is a problem with connection with the server")}finally{n(),r.button.disabled=!1,i.page===i.maxPage&&(n(),a(),r.button.removeEventListener("click",y),createMessage("We are sorry, but you've reached the end of search results")),h()}function n(){setTimeout(()=>{r.loader.classList.add("is-hidden")},500)}function o(){r.loader.classList.remove("is-hidden")}function a(){r.button.classList.add("is-hidden")}}
//# sourceMappingURL=commonHelpers.js.map
